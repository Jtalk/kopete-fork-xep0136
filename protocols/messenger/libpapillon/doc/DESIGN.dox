/**
\page libpapillon_design Libpapillon DESIGN

<h2>Main Architecture</h2>
It use a Task-based architecture for async operation. 

-Papillon::Task class

-Papillon::Transfer class
This class encapsulate a command or a message. The main socket parse a packet and create
a instance of this class. This is also used to build a command or message to send to the server.

type enum flags(can be OR'ed):
-NormalTransfer
-PayloadTransfer
-TransactionTransfer

-Papillon::MimeHeader class
Encapsulate MIME header from messages or HTTP request into a key/value system.
Call static method MimeHeader::parse(const QString &data) to generate a MimeHeader class.

-Papillon::Message class
Include a Papillon::MimeHeader
Return a QByteArray for be sent as payload data.

-Papillon::SlpMessage(inherits Papillon::Message)
Special Message classes for SLP message type (P2P).

-Papillon::ClientStream
Dispatch new transfer from/in the Socket.

-Papillon::SecureStream
Secure stream on SSL/TLS using QCA::TLS. Useful for login progress and contact list webservice.

-Papillon::Connection
hold transaction ID count, root task and such.

-Papillon::NotificationConnection
Main connection to MSN server. Handle login, dispatch of Switchboard connection and such.

-Papillon::SwitchboardConnection
a switchboard connection/session.

-Papillon::SwitchboardPool
Manager switchboards connections

-Papillon::ContactListManager
Manage contact list.

*/
