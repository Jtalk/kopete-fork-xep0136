Index: src/xmpp/xmpp-im/xmpp_message.h
===================================================================
--- src/xmpp/xmpp-im/xmpp_message.h	(revision 1356119)
+++ src/xmpp/xmpp-im/xmpp_message.h	(working copy)
@@ -110,6 +110,8 @@
 		void setMessageReceiptId(const QString &s);
 
 		// JEP-0027
+		QString xsigned() const;
+		void setXSigned(const QString &s);
 		QString xencrypted() const;
 		void setXEncrypted(const QString &s);
 		
Index: src/xmpp/xmpp-im/types.cpp
===================================================================
--- src/xmpp/xmpp-im/types.cpp	(revision 1356119)
+++ src/xmpp/xmpp-im/types.cpp	(working copy)
@@ -944,7 +944,7 @@
 	QList<PubSubItem> pubsubItems;
 	QList<PubSubRetraction> pubsubRetractions;
 	QString eventId;
-	QString xencrypted, invite;
+	QString xsigned, xencrypted, invite;
 	ChatState chatState;
 	MessageReceipt messageReceipt;
 	QString messageReceiptId;
@@ -1331,6 +1331,16 @@
 	d->messageReceiptId = s;
 }
 
+QString Message::xsigned() const
+{
+	return d->xsigned;
+}
+
+void Message::setXSigned(const QString &s)
+{
+	d->xsigned = s;
+}
+
 QString Message::xencrypted() const
 {
 	return d->xencrypted;
@@ -1610,6 +1620,10 @@
 		}
 	}
 
+	// xsigned
+	if(!d->xsigned.isEmpty())
+		s.appendChild(s.createTextElement("jabber:x:signed", "x", d->xsigned));
+
 	// xencrypted
 	if(!d->xencrypted.isEmpty())
 		s.appendChild(s.createTextElement("jabber:x:encrypted", "x", d->xencrypted));
@@ -1884,6 +1898,13 @@
 		d->messageReceiptId = t.attribute("id");
 	}
 
+	// xsigned
+	t = childElementsByTagNameNS(root, "jabber:x:signed", "x").item(0).toElement();
+	if(!t.isNull())
+		d->xsigned = t.text();
+	else
+		d->xsigned = QString();
+
 	// xencrypted
 	t = childElementsByTagNameNS(root, "jabber:x:encrypted", "x").item(0).toElement();
 	if(!t.isNull())
