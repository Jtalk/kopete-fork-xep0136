Index: src/irisnet/noncore/cutestuff/socks.cpp
===================================================================
--- src/irisnet/noncore/cutestuff/socks.cpp	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/socks.cpp	(working copy)
@@ -471,6 +471,11 @@
 	delete d;
 }
 
+QAbstractSocket* SocksClient::abstractSocket() const
+{
+	return d->sock.abstractSocket();
+}
+
 void SocksClient::reset(bool clear)
 {
 	if(d->sock.state() != BSocket::Idle)
Index: src/irisnet/noncore/cutestuff/bytestream.h
===================================================================
--- src/irisnet/noncore/cutestuff/bytestream.h	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/bytestream.h	(working copy)
@@ -25,6 +25,7 @@
 #include <QByteArray>
 #include <QIODevice>
 
+class QAbstractSocket;
 // CS_NAMESPACE_BEGIN
 
 // CS_EXPORT_BEGIN
@@ -44,6 +45,8 @@
 	int errorCode() const;
 	QString &errorText() const;
 
+	virtual QAbstractSocket* abstractSocket() const { return 0; }
+
 signals:
 	void connectionClosed();
 	void delayedCloseFinished();
Index: src/irisnet/noncore/cutestuff/socks.h
===================================================================
--- src/irisnet/noncore/cutestuff/socks.h	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/socks.h	(working copy)
@@ -63,6 +63,8 @@
 	SocksClient(int, QObject *parent=0);
 	~SocksClient();
 
+	virtual QAbstractSocket* abstractSocket() const;
+
 	bool isIncoming() const;
 
 	// outgoing
Index: src/irisnet/noncore/cutestuff/bsocket.cpp
===================================================================
--- src/irisnet/noncore/cutestuff/bsocket.cpp	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/bsocket.cpp	(working copy)
@@ -307,6 +307,11 @@
 	d->resolver->tryNext();
 }
 
+QAbstractSocket* BSocket::abstractSocket() const
+{
+	return d->qsock;
+}
+
 int BSocket::socket() const
 {
 	if(d->qsock)
Index: src/irisnet/noncore/cutestuff/bsocket.h
===================================================================
--- src/irisnet/noncore/cutestuff/bsocket.h	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/bsocket.h	(working copy)
@@ -54,6 +54,7 @@
 	void connectToHost(const QString &host, quint16 port, QAbstractSocket::NetworkLayerProtocol protocol = QAbstractSocket::UnknownNetworkLayerProtocol);
 	/*! Connect to the hosts for the specified service */
 	void connectToHost(const QString &service, const QString &transport, const QString &domain, quint16 port = std::numeric_limits<int>::max());
+	virtual QAbstractSocket* abstractSocket() const;
 	int socket() const;
 	void setSocket(int);
 	int state() const;
Index: src/irisnet/noncore/cutestuff/httppoll.cpp
===================================================================
--- src/irisnet/noncore/cutestuff/httppoll.cpp	(revision 1355313)
+++ src/irisnet/noncore/cutestuff/httppoll.cpp	(working copy)
@@ -109,6 +109,11 @@
 	delete d;
 }
 
+QAbstractSocket* HttpPoll::abstractSocket() const
+{
+	return d->http.abstractSocket();
+}
+
 void HttpPoll::reset(bool clear)
 {
 	if(d->http.isActive())
@@ -487,6 +492,11 @@
 	d->useSsl = state;
 }
 
+QAbstractSocket* HttpProxyPost::abstractSocket() const
+{
+	return d->sock.abstractSocket();
+}
+
 void HttpProxyPost::reset(bool clear)
 {
 	if(d->sock.state() != BSocket::Idle)
Index: src/irisnet/noncore/cutestuff/httppoll.h
===================================================================
--- src/irisnet/noncore/cutestuff/httppoll.h	(revision 1355305)
+++ src/irisnet/noncore/cutestuff/httppoll.h	(working copy)
@@ -35,6 +35,8 @@
 	HttpPoll(QObject *parent=0);
 	~HttpPoll();
 
+	virtual QAbstractSocket* abstractSocket() const;
+
 	void setAuth(const QString &user, const QString &pass="");
 	void connectToUrl(const QUrl &url);
 	void connectToHost(const QString &proxyHost, int proxyPort, const QUrl &url);
@@ -77,6 +79,8 @@
 	HttpProxyPost(QObject *parent=0);
 	~HttpProxyPost();
 
+	QAbstractSocket* abstractSocket() const;
+
 	void setUseSsl(bool state);
 	void setAuth(const QString &user, const QString &pass="");
 	bool isActive() const;
