This patch fixes compilation on windows. For an explanation see
KDE_DUMMY_QHASH_FUNCTION and KDE_DUMMY_COMPARISON_OPERATOR in kdemacros.h

Index: cutestuff/legacy/ndns.cpp
===================================================================
--- cutestuff/legacy/ndns.cpp	(revision 773316)
+++ cutestuff/legacy/ndns.cpp	(working copy)
@@ -69,6 +69,7 @@
 
 #ifdef Q_OS_WIN32
 #include <windows.h>
+#include <winsock2.h>
 #endif
 
 // CS_NAMESPACE_BEGIN
Index: cutestuff/network/socks.cpp
===================================================================
--- cutestuff/network/socks.cpp	(revision 773316)
+++ cutestuff/network/socks.cpp	(working copy)
@@ -37,6 +37,7 @@
 
 #ifdef Q_OS_WIN32
 #include <windows.h>
+#include <winsock2.h>
 #endif
 
 #ifdef Q_OS_UNIX
Index: iris/include/im.h
===================================================================
--- iris/include/im.h	(revision 773316)
+++ iris/include/im.h	(working copy)
@@ -85,7 +85,20 @@
 
 		class Private;
 		Private *d;
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    public:
+        bool operator==(const FormField&) const {
+            qWarning("FormField::operator==(const FormField&) was called");
+            return false;
+        }
+#endif
 	};
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    inline uint qHash(const FormField&) {
+        qWarning("inline uint qHash(const FormField&) was called");
+        return 0;
+    }
+#endif
 
 	class IRIS_EXPORT Form : public QList<FormField>
 	{
Index: iris/include/xmpp_liverosteritem.h
===================================================================
--- iris/include/xmpp_liverosteritem.h	(revision 773316)
+++ iris/include/xmpp_liverosteritem.h	(working copy)
@@ -54,7 +54,20 @@
 		ResourceList v_resourceList;
 		Status v_lastUnavailableStatus;
 		bool v_flagForDelete;
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    public:
+        bool operator==(const LiveRosterItem&) const {
+            qWarning("LiveRosterItem::operator==(const LiveRosterItem&) was called");
+            return false;
+        }
+#endif
 	};
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    inline uint qHash(const LiveRosterItem&) {
+        qWarning("inline uint qHash(const LiveRosterItem&) was called");
+        return 0;
+    }
+#endif
 }
 
 #endif
Index: iris/include/xmpp_resource.h
===================================================================
--- iris/include/xmpp_resource.h	(revision 773316)
+++ iris/include/xmpp_resource.h	(working copy)
@@ -44,7 +44,20 @@
 	private:
 		QString v_name;
 		Status v_status;
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    public:
+        bool operator==(const Resource&) const {
+            qWarning("Resource::operator==(const Resource&) was called");
+            return false;
+        }
+#endif
 	};
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    inline uint qHash(const Resource&) {
+        qWarning("inline uint qHash(const Resource&) was called");
+        return 0;
+    }
+#endif
 }
 
 #endif
Index: iris/include/xmpp_rosteritem.h
===================================================================
--- iris/include/xmpp_rosteritem.h	(revision 773316)
+++ iris/include/xmpp_rosteritem.h	(working copy)
@@ -78,7 +78,20 @@
 		Subscription v_subscription;
 		QString v_ask;
 		bool v_push;
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    public:
+        bool operator==(const RosterItem&) const {
+            qWarning("RosterItem::operator==(const RosterItem&) was called");
+            return false;
+        }
+#endif
 	};
+#ifdef IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
+    inline uint qHash(const RosterItem&) {
+        qWarning("inline uint qHash(const RosterItem&) was called");
+        return 0;
+    }
+#endif
 }
 
 #endif
Index: iris/iris_export.h
===================================================================
--- iris/iris_export.h	(revision 773316)
+++ iris/iris_export.h	(working copy)
@@ -15,4 +15,8 @@
 # endif
 #endif
 
+#ifdef Q_OS_WIN
+# define IRIS_FULL_TEMPLATE_EXPORT_INSTANTIATION
 #endif
+
+#endif
Index: iris/jabber/s5b.cpp
===================================================================
--- iris/jabber/s5b.cpp	(revision 773316)
+++ iris/jabber/s5b.cpp	(working copy)
@@ -33,6 +33,7 @@
 
 #ifdef Q_OS_WIN
 # include <windows.h>
+# include <winsock2.h>
 #else
 # include <netinet/in.h>
 #endif
Index: iris/xmpp-im/xmpp_vcard.h
===================================================================
--- iris/xmpp-im/xmpp_vcard.h	(revision 773316)
+++ iris/xmpp-im/xmpp_vcard.h	(working copy)
@@ -31,6 +31,11 @@
 #include <iris_export.h>
 class QDate;
 
+// on win32 timezone is a define and screws up the build
+#ifdef timezone
+#undef timezone
+#endif
+
 namespace XMPP
 {
 	class IRIS_EXPORT VCard
