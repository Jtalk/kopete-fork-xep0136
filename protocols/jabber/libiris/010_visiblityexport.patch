Index: iris/include/xmpp.h
===================================================================
--- iris/include/xmpp.h	(revision 539413)
+++ iris/include/xmpp.h	(working copy)
@@ -29,6 +29,8 @@
 #include <qxml.h>
 #include <qdom.h>
 
+#include <iris_export.h>
+
 namespace QCA
 {
 	class TLS;
@@ -60,7 +62,7 @@
 
 	void setDebug(Debug *);
 
-	class Connector : public QObject
+	class IRIS_EXPORT Connector : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -92,7 +94,7 @@
 		quint16 port;
 	};
 
-	class AdvancedConnector : public Connector
+	class IRIS_EXPORT AdvancedConnector : public Connector
 	{
 		Q_OBJECT
 	public:
@@ -166,7 +168,7 @@
 		void tryNextSrv();
 	};
 
-	class TLSHandler : public QObject
+	class IRIS_EXPORT TLSHandler : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -186,7 +188,7 @@
 		void readyReadOutgoing(const QByteArray &a, int plainBytes);
 	};
 
-	class QCATLSHandler : public TLSHandler
+	class IRIS_EXPORT QCATLSHandler : public TLSHandler
 	{
 		Q_OBJECT
 	public:
@@ -219,7 +221,7 @@
 		Private *d;
 	};
 
-	class Jid
+	class IRIS_EXPORT Jid
 	{
 	public:
 		Jid();
@@ -268,7 +270,7 @@
 	};
 
 	class Stream;
-	class Stanza
+	class IRIS_EXPORT Stanza
 	{
 	public:
 		enum Kind { Message, Presence, IQ };
@@ -353,7 +355,7 @@
 		Private *d;
 	};
 
-	class Stream : public QObject
+	class IRIS_EXPORT Stream : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -401,7 +403,7 @@
 		void error(int);
 	};
 
-	class ClientStream : public Stream
+	class IRIS_EXPORT ClientStream : public Stream
 	{
 		Q_OBJECT
 	public:
Index: iris/include/im.h
===================================================================
--- iris/include/im.h	(revision 539413)
+++ iris/include/im.h	(working copy)
@@ -26,9 +26,11 @@
 #include <QList>
 #include "xmpp.h"
 
+#include <iris_export.h>
+
 namespace XMPP
 {
-	class Url
+	class IRIS_EXPORT Url
 	{
 	public:
 		Url(const QString &url="", const QString &desc="");
@@ -52,7 +54,7 @@
 	typedef enum { OfflineEvent, DeliveredEvent, DisplayedEvent,
 			ComposingEvent, CancelEvent, InactiveEvent, GoneEvent } MsgEvent;
                                            
-	class Message
+	class IRIS_EXPORT Message
 	{
 	public:
 		Message(const Jid &to="");
@@ -121,7 +123,7 @@
 		Private *d;
 	};
 
-	class Subscription
+	class IRIS_EXPORT Subscription
 	{
 	public:
 		enum SubType { None, To, From, Both, Remove };
@@ -137,7 +139,7 @@
 		SubType value;
 	};
 
-	class Status
+	class IRIS_EXPORT Status
 	{
 	public:
 		Status(const QString &show="", const QString &status="", int priority=0, bool available=true);
@@ -192,7 +194,7 @@
 		QString estr;
 	};
 
-	class Resource
+	class IRIS_EXPORT Resource
 	{
 	public:
 		Resource(const QString &name="", const Status &s=Status());
@@ -210,7 +212,7 @@
 		Status v_status;
 	};
 
-	class ResourceList : public QList<Resource>
+	class IRIS_EXPORT ResourceList : public QList<Resource>
 	{
 	public:
 		ResourceList();
@@ -223,7 +225,7 @@
 		ResourceList::ConstIterator priority() const;
 	};
 
-	class RosterItem
+	class IRIS_EXPORT RosterItem
 	{
 	public:
 		RosterItem(const Jid &jid="");
@@ -258,7 +260,7 @@
 		bool v_push;
 	};
 
-	class Roster : public QList<RosterItem>
+	class IRIS_EXPORT Roster : public QList<RosterItem>
 	{
 	public:
 		Roster();
@@ -271,7 +273,7 @@
 		class RosterPrivate *d;
 	};
 
-        class Features
+        class IRIS_EXPORT Features
 	{
 	public:
 		Features();
@@ -323,7 +325,7 @@
 		QStringList _list;
 	};
 
-	class AgentItem
+	class IRIS_EXPORT AgentItem
 	{
 	public:
 		AgentItem() { }
@@ -348,7 +350,7 @@
 
 	typedef QList<AgentItem> AgentList;
 
-	class DiscoItem
+	class IRIS_EXPORT DiscoItem
 	{
 	public:
 		DiscoItem();
@@ -404,7 +406,7 @@
 
 	typedef QList<DiscoItem> DiscoList;
 
-	class FormField
+	class IRIS_EXPORT FormField
 	{
 	public:
 		enum { username, nick, password, name, first, last, email, address, city, state, zip, phone, url, date, misc };
@@ -431,7 +433,7 @@
 		Private *d;
 	};
 
-	class Form : public QList<FormField>
+	class IRIS_EXPORT Form : public QList<FormField>
 	{
 	public:
 		Form(const Jid &j="");
@@ -452,7 +454,7 @@
 		Private *d;
 	};
 
-	class SearchResult
+	class IRIS_EXPORT SearchResult
 	{
 	public:
 		SearchResult(const Jid &jid="");
@@ -483,7 +485,7 @@
 	class JidLinkManager;
 	class FileTransferManager;
 
-	class Task : public QObject
+	class IRIS_EXPORT Task : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -530,7 +532,7 @@
 		TaskPrivate *d;
 	};
 
-	class Client : public QObject
+	class IRIS_EXPORT Client : public QObject
 	{
 		Q_OBJECT
 
@@ -662,7 +664,7 @@
 		ClientPrivate *d;
 	};
 
-	class LiveRosterItem : public RosterItem
+	class IRIS_EXPORT LiveRosterItem : public RosterItem
 	{
 	public:
 		LiveRosterItem(const Jid &j="");
@@ -690,7 +692,7 @@
 		bool v_flagForDelete;
 	};
 
-	class LiveRoster : public QList<LiveRosterItem>
+	class IRIS_EXPORT LiveRoster : public QList<LiveRosterItem>
 	{
 	public:
 		LiveRoster();
Index: iris/jabber/s5b.h
===================================================================
--- iris/jabber/s5b.h	(revision 539413)
+++ iris/jabber/s5b.h	(working copy)
@@ -42,7 +42,7 @@
 	typedef Q3PtrList<S5BConnection> S5BConnectionList;
 	typedef Q3PtrListIterator<S5BConnection> S5BConnectionListIt;
 
-	class S5BDatagram
+	class IRIS_EXPORT S5BDatagram
 	{
 	public:
 		S5BDatagram();
@@ -57,7 +57,7 @@
 		QByteArray _buf;
 	};
 
-	class S5BConnection : public ByteStream
+	class IRIS_EXPORT S5BConnection : public ByteStream
 	{
 		Q_OBJECT
 	public:
@@ -127,7 +127,7 @@
 		S5BConnection(S5BManager *, QObject *parent=0);
 	};
 
-	class S5BManager : public QObject
+	class IRIS_EXPORT S5BManager : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -196,7 +196,7 @@
 		void doActivate(const Jid &peer, const QString &sid, const Jid &streamHost);
 	};
 
-	class S5BConnector : public QObject
+	class IRIS_EXPORT S5BConnector : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -227,7 +227,7 @@
 	};
 
 	// listens on a port for serving
-	class S5BServer : public QObject
+	class IRIS_EXPORT S5BServer : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -260,7 +260,7 @@
 		void writeUDP(const QHostAddress &addr, int port, const QByteArray &data);
 	};
 
-	class JT_S5B : public Task
+	class IRIS_EXPORT JT_S5B : public Task
 	{
 		Q_OBJECT
 	public:
@@ -286,7 +286,7 @@
 		Private *d;
 	};
 
-	struct S5BRequest
+	struct IRIS_EXPORT S5BRequest
 	{
 		Jid from;
 		QString id, sid;
@@ -294,7 +294,7 @@
 		bool fast;
 		bool udp;
 	};
-	class JT_PushS5B : public Task
+	class IRIS_EXPORT JT_PushS5B : public Task
 	{
 		Q_OBJECT
 	public:
@@ -316,7 +316,7 @@
 		void incomingActivate(const Jid &from, const QString &sid, const Jid &streamHost);
 	};
 
-	class StreamHost
+	class IRIS_EXPORT StreamHost
 	{
 	public:
 		StreamHost();
Index: iris/jabber/xmpp_ibb.h
===================================================================
--- iris/jabber/xmpp_ibb.h	(revision 539413)
+++ iris/jabber/xmpp_ibb.h	(working copy)
@@ -34,7 +34,7 @@
 	class IBBManager;
 
 	// this is an IBB connection.  use it much like a qsocket
-	class IBBConnection : public ByteStream
+	class IRIS_EXPORT IBBConnection : public ByteStream
 	{
 		Q_OBJECT
 	public:
@@ -78,7 +78,7 @@
 
 	typedef Q3PtrList<IBBConnection> IBBConnectionList;
 	typedef Q3PtrListIterator<IBBConnection> IBBConnectionListIt;
-	class IBBManager : public QObject
+	class IRIS_EXPORT IBBManager : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -111,7 +111,7 @@
 		void doReject(IBBConnection *c, const QString &id, int, const QString &);
 	};
 
-	class JT_IBB : public Task
+	class IRIS_EXPORT JT_IBB : public Task
 	{
 		Q_OBJECT
 	public:
Index: iris/jabber/filetransfer.h
===================================================================
--- iris/jabber/filetransfer.h	(revision 539413)
+++ iris/jabber/filetransfer.h	(working copy)
@@ -28,7 +28,7 @@
 	class S5BConnection;
 	struct FTRequest;
 
-	class FileTransfer : public QObject
+	class IRIS_EXPORT FileTransfer : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -85,7 +85,7 @@
 		void takeConnection(S5BConnection *c);
 	};
 
-	class FileTransferManager : public QObject
+	class IRIS_EXPORT FileTransferManager : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -116,7 +116,7 @@
 		void unlink(FileTransfer *);
 	};
 
-	class JT_FT : public Task
+	class IRIS_EXPORT JT_FT : public Task
 	{
 		Q_OBJECT
 	public:
Index: iris/jabber/xmpp_jidlink.h
===================================================================
--- iris/jabber/xmpp_jidlink.h	(revision 539413)
+++ iris/jabber/xmpp_jidlink.h	(working copy)
@@ -35,7 +35,7 @@
 {
 	class Client;
 
-	class JidLink : public QObject
+	class IRIS_EXPORT JidLink : public QObject
 	{
 		Q_OBJECT
 	public:
@@ -94,7 +94,7 @@
 	};
 
 	// the job of JidLinkManager is to keep track of streams and properly shut them down
-	class JidLinkManager : public QObject
+	class IRIS_EXPORT JidLinkManager : public QObject
 	{
 		Q_OBJECT
 	public:
Index: iris/xmpp-im/xmpp_tasks.h
===================================================================
--- iris/xmpp-im/xmpp_tasks.h	(revision 539413)
+++ iris/xmpp-im/xmpp_tasks.h	(working copy)
@@ -34,7 +34,7 @@
 	class Roster;
 	class Status;
 
-	class JT_Register : public Task
+	class IRIS_EXPORT JT_Register : public Task
 	{
 		Q_OBJECT
 	public:
@@ -60,7 +60,7 @@
 		Private *d;
 	};
 
-	class JT_UnRegister : public Task
+	class IRIS_EXPORT JT_UnRegister : public Task
 	{
 		Q_OBJECT
 	public:
@@ -80,7 +80,7 @@
 		Private *d;
 	};
 
-	class JT_Roster : public Task
+	class IRIS_EXPORT JT_Roster : public Task
 	{
 		Q_OBJECT
 	public:
@@ -108,7 +108,7 @@
 		Private *d;
 	};
 
-	class JT_PushRoster : public Task
+	class IRIS_EXPORT JT_PushRoster : public Task
 	{
 		Q_OBJECT
 	public:
@@ -125,7 +125,7 @@
 		Private *d;
 	};
 
-	class JT_Presence : public Task
+	class IRIS_EXPORT JT_Presence : public Task
 	{
 		Q_OBJECT
 	public:
@@ -146,7 +146,7 @@
 		Private *d;
 	};
 
-	class JT_PushPresence : public Task
+	class IRIS_EXPORT JT_PushPresence : public Task
 	{
 		Q_OBJECT
 	public:
@@ -164,7 +164,7 @@
 		Private *d;
 	};
 
-	class JT_Message : public Task
+	class IRIS_EXPORT JT_Message : public Task
 	{
 		Q_OBJECT
 	public:
@@ -180,7 +180,7 @@
 		Private *d;
 	};
 
-	class JT_PushMessage : public Task
+	class IRIS_EXPORT JT_PushMessage : public Task
 	{
 		Q_OBJECT
 	public:
@@ -197,7 +197,7 @@
 		Private *d;
 	};
 
-	class JT_GetLastActivity : public Task
+	class IRIS_EXPORT JT_GetLastActivity : public Task
 	{
 		Q_OBJECT
 	public:
@@ -220,7 +220,7 @@
 		Jid jid;
 	};
 
-	class JT_GetServices : public Task
+	class IRIS_EXPORT JT_GetServices : public Task
 	{
 		Q_OBJECT
 	public:
@@ -242,7 +242,7 @@
 		AgentList agentList;
 	};
 
-	class JT_VCard : public Task
+	class IRIS_EXPORT JT_VCard : public Task
 	{
 		Q_OBJECT
 	public:
@@ -265,7 +265,7 @@
 		Private *d;
 	};
 
-	class JT_Search : public Task
+	class IRIS_EXPORT JT_Search : public Task
 	{
 		Q_OBJECT
 	public:
@@ -289,7 +289,7 @@
 		Private *d;
 	};
 
-	class JT_ClientVersion : public Task
+	class IRIS_EXPORT JT_ClientVersion : public Task
 	{
 		Q_OBJECT
 	public:
@@ -328,7 +328,7 @@
 		QDomElement iq;
 	};
 */
-	class JT_ServInfo : public Task
+	class IRIS_EXPORT JT_ServInfo : public Task
 	{
 		Q_OBJECT
 	public:
@@ -338,7 +338,7 @@
 		bool take(const QDomElement &);
 	};
 
-	class JT_Gateway : public Task
+	class IRIS_EXPORT JT_Gateway : public Task
 	{
 		Q_OBJECT
 	public:
@@ -361,7 +361,7 @@
 		QString v_prompt, v_desc;
 	};
 
-	class JT_Browse : public Task
+	class IRIS_EXPORT JT_Browse : public Task
 	{
 		Q_OBJECT
 	public:
@@ -383,7 +383,7 @@
 		AgentItem browseHelper (const QDomElement &i);
 	};
 
-	class JT_DiscoItems : public Task
+	class IRIS_EXPORT JT_DiscoItems : public Task
 	{
 		Q_OBJECT
 	public:
@@ -403,7 +403,7 @@
 		Private *d;
 	};
 
-	class JT_DiscoInfo : public Task
+	class IRIS_EXPORT JT_DiscoInfo : public Task
 	{
 		Q_OBJECT
 	public:
@@ -425,7 +425,7 @@
 		Private *d;
 	};
 
-	class JT_DiscoPublish : public Task
+	class IRIS_EXPORT JT_DiscoPublish : public Task
 	{
 		Q_OBJECT
 	public:
@@ -442,7 +442,7 @@
 		Private *d;
 	};
 
-	class JT_MucPresence : public Task
+	class IRIS_EXPORT JT_MucPresence : public Task
 	{
 		Q_OBJECT
 	public:
@@ -462,7 +462,7 @@
 		Private *d;
 	};
 	
-	class JT_PrivateStorage : public Task
+	class IRIS_EXPORT JT_PrivateStorage : public Task
 	{
 		Q_OBJECT
 	public:
Index: iris/xmpp-im/xmpp_vcard.h
===================================================================
--- iris/xmpp-im/xmpp_vcard.h	(revision 539413)
+++ iris/xmpp-im/xmpp_vcard.h	(working copy)
@@ -28,11 +28,13 @@
 #include <QList>
 #include <qdom.h>
 
+#include <iris_export.h>
+
 class QDate;
 
 namespace XMPP
 {
-	class VCard
+	class IRIS_EXPORT VCard
 	{
 	public:
 		VCard();
@@ -85,7 +87,7 @@
 		void setBdayStr(const QString &);
 
 
-		class Address {
+		class IRIS_EXPORT Address {
 		public:
 			Address();
 
@@ -111,7 +113,7 @@
 		const AddressList &addressList() const;
 		void setAddressList(const AddressList &);
 
-		class Label {
+		class IRIS_EXPORT Label {
 		public:
 			Label();
 
@@ -132,7 +134,7 @@
 		void setLabelList(const LabelList &);
 
 
-		class Phone {
+		class IRIS_EXPORT Phone {
 		public:
 			Phone();
 
@@ -157,7 +159,7 @@
 		void setPhoneList(const PhoneList &);
 
 
-		class Email {
+		class IRIS_EXPORT Email {
 		public:
 			Email();
 
@@ -183,7 +185,7 @@
 		void setTimezone(const QString &);
 
 
-		class Geo {
+		class IRIS_EXPORT Geo {
 		public:
 			Geo();
 
@@ -215,7 +217,7 @@
 		void setAgentURI(const QString &);
 
 
-		class Org {
+		class IRIS_EXPORT Org {
 		public:
 			Org();
 
Index: iris/iris_export.h
===================================================================
--- iris/iris_export.h	(revision 0)
+++ iris/iris_export.h	(revision 0)
@@ -0,0 +1,8 @@
+#ifndef IRIS_EXPORT_H
+#define IRIS_EXPORT_H
+
+#include <QtGlobal>
+
+#define IRIS_EXPORT Q_DECL_EXPORT
+
+#endif
Index: cutestuff/cutestuff_export.h
===================================================================
--- cutestuff/cutestuff_export.h	(revision 0)
+++ cutestuff/cutestuff_export.h	(revision 0)
@@ -0,0 +1,8 @@
+#ifndef CUTESTUFF_EXPORT_H
+#define CUTESTUFF_EXPORT_H
+
+#include <QtGlobal>
+
+#define CUTESTUFF_EXPORT Q_DECL_EXPORT
+
+#endif
Index: cutestuff/network/httpconnect.h
===================================================================
--- cutestuff/network/httpconnect.h	(revision 539413)
+++ cutestuff/network/httpconnect.h	(working copy)
@@ -23,9 +23,10 @@
 
 #include "bytestream.h"
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
-class HttpConnect : public ByteStream
+class CUTESTUFF_EXPORT HttpConnect : public ByteStream
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/bsocket.h
===================================================================
--- cutestuff/network/bsocket.h	(revision 539413)
+++ cutestuff/network/bsocket.h	(working copy)
@@ -25,9 +25,10 @@
 #include <qhostaddress.h>
 #include "bytestream.h"
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
-class BSocket : public ByteStream
+class CUTESTUFF_EXPORT BSocket : public ByteStream
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/srvresolver.h
===================================================================
--- cutestuff/network/srvresolver.h	(revision 539413)
+++ cutestuff/network/srvresolver.h	(working copy)
@@ -25,8 +25,9 @@
 #include <q3dns.h>
 
 // CS_NAMESPACE_BEGIN
+#include <cutestuff_export.h>
 
-class SrvResolver : public QObject
+class CUTESTUFF_EXPORT SrvResolver : public QObject
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/servsock.h
===================================================================
--- cutestuff/network/servsock.h	(revision 539413)
+++ cutestuff/network/servsock.h	(working copy)
@@ -24,8 +24,9 @@
 #include <q3serversocket.h>
 
 // CS_NAMESPACE_BEGIN
+#include <cutestuff_export.h>
 
-class ServSock : public QObject
+class CUTESTUFF_EXPORT ServSock : public QObject
 {
 	Q_OBJECT
 public:
@@ -49,7 +50,7 @@
 	Private *d;
 };
 
-class ServSockSignal : public Q3ServerSocket
+class CUTESTUFF_EXPORT ServSockSignal : public Q3ServerSocket
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/ndns.h
===================================================================
--- cutestuff/network/ndns.h	(revision 539413)
+++ cutestuff/network/ndns.h	(working copy)
@@ -29,12 +29,13 @@
 //Added by qt3to4:
 #include <QEvent>
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
 class NDnsWorker;
 class NDnsManager;
 
-class NDns : public QObject
+class CUTESTUFF_EXPORT NDns : public QObject
 {
 	Q_OBJECT
 public:
@@ -58,7 +59,7 @@
 	void finished(const QHostAddress &);
 };
 
-class NDnsManager : public QObject
+class CUTESTUFF_EXPORT NDnsManager : public QObject
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/httppoll.h
===================================================================
--- cutestuff/network/httppoll.h	(revision 539413)
+++ cutestuff/network/httppoll.h	(working copy)
@@ -23,9 +23,10 @@
 
 #include "bytestream.h"
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
-class HttpPoll : public ByteStream
+class CUTESTUFF_EXPORT HttpPoll : public ByteStream
 {
 	Q_OBJECT
 public:
@@ -67,7 +68,7 @@
 	const QString & getKey(bool *);
 };
 
-class HttpProxyPost : public QObject
+class CUTESTUFF_EXPORT HttpProxyPost : public QObject
 {
 	Q_OBJECT
 public:
Index: cutestuff/network/socks.h
===================================================================
--- cutestuff/network/socks.h	(revision 539413)
+++ cutestuff/network/socks.h	(working copy)
@@ -23,13 +23,14 @@
 
 #include "bytestream.h"
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
 class QHostAddress;
 class SocksClient;
 class SocksServer;
 
-class SocksUDP : public QObject
+class CUTESTUFF_EXPORT SocksUDP : public QObject
 {
 	Q_OBJECT
 public:
@@ -52,7 +53,7 @@
 	SocksUDP(SocksClient *sc, const QString &host, int port, const QHostAddress &routeAddr, int routePort);
 };
 
-class SocksClient : public ByteStream
+class CUTESTUFF_EXPORT SocksClient : public ByteStream
 {
 	Q_OBJECT
 public:
@@ -125,7 +126,7 @@
 	void writeData(const QByteArray &a);
 };
 
-class SocksServer : public QObject
+class CUTESTUFF_EXPORT SocksServer : public QObject
 {
 	Q_OBJECT
 public:
Index: cutestuff/util/sha1.h
===================================================================
--- cutestuff/util/sha1.h	(revision 539413)
+++ cutestuff/util/sha1.h	(working copy)
@@ -25,9 +25,11 @@
 //Added by qt3to4:
 #include <QByteArray>
 
+#include <cutestuff_export.h>
+
 // CS_NAMESPACE_BEGIN
 
-class SHA1
+class CUTESTUFF_EXPORT SHA1
 {
 public:
 	static QByteArray hash(const QByteArray &);
Index: cutestuff/util/bytestream.h
===================================================================
--- cutestuff/util/bytestream.h	(revision 539413)
+++ cutestuff/util/bytestream.h	(working copy)
@@ -24,10 +24,11 @@
 #include <qobject.h>
 #include <q3cstring.h>
 
+#include <cutestuff_export.h>
 // CS_NAMESPACE_BEGIN
 
 // CS_EXPORT_BEGIN
-class ByteStream : public QObject
+class CUTESTUFF_EXPORT ByteStream : public QObject
 {
 	Q_OBJECT
 public:
Index: cutestuff/util/base64.h
===================================================================
--- cutestuff/util/base64.h	(revision 539413)
+++ cutestuff/util/base64.h	(working copy)
@@ -24,8 +24,9 @@
 #include<qstring.h>
 
 // CS_NAMESPACE_BEGIN
+#include <cutestuff_export.h>
 
-class Base64
+class CUTESTUFF_EXPORT Base64
 {
 public:
 	static QByteArray encode(const QByteArray &);
